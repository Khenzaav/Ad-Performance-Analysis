DROP DATABASE IF EXISTS ADS;
create database ADS;
USE ADS;
create table AD_PERFOMANCE_DATA(                                  
   AGE INT,
   GENDER varchar(6),
   INCOME decimal(9,3),
   LOCATION VARCHAR(10),
   AD_TYPE VARCHAR (6),
   AD_TOPIC vArChAr(15),
   AD_PLACEMENT VARChAR(15),
   CLICKS INT UnsIgNEd,
   CLICK_TIME TIME(1),
   CONVERSION_RATE DeCimAl(5,4),
   CTR deCimAl(5,4)
   );
SHOW tables;
SELECT COUNT(*) AS missing_count
FROM AD_PERFOMANCE_DATA
WHERE age IS NULL 
   OR TRIM(age)='';
SELECT * FROM AD_PERFOMANCE_DATA  
WHERE AGE<0 OR AGE>100;
UPDATE AD_PERFOMANCE_DATA
SET AGE=ABS(AGE)
LIMIT 10000;
SELECT * FROM AD_PERFOMANCE_DATA
WHERE AGE<=10;
SELECT COUNT(*) AS CHILDREN
FROM AD_PERFOMANCE_DATA
WHERE AGE <=10;
DELETE FROM AD_PERFOMANCE_DATA
WHERE AGE <= 10
LIMIT 10000;

SELECT COUNT(*) AS missing_count
FROM AD_PERFOMANCE_DATA
WHERE gender IS NULL 
   OR TRIM(gender)='';
SELECT GENDER,COUNT(*) AS COUNT
FROM AD_PERFOMANCE_DATA
GROUP BY GENDER;
SELECT COUNT(*) AS missing_count
FROM AD_PERFOMANCE_DATA
WHERE location IS NULL 
   OR TRIM(location)='';
SELECT 'location', location, COUNT(*)
FROM AD_PERFOMANCE_DATA
GROUP BY location;
SELECT COUNT(*) AS missing_count
FROM AD_PERFOMANCE_DATA
WHERE ad_type IS NULL 
   OR TRIM(ad_type)='';
SELECT 'ad_type', ad_type, COUNT(*)
FROM AD_PERFOMANCE_DATA
GROUP BY ad_type;
SELECT COUNT(*) AS missing_count
FROM AD_PERFOMANCE_DATA
WHERE ad_placement IS NULL 
   OR TRIM(ad_placement)='';
SELECT 'ad_placement', ad_placement, COUNT(*)
FROM AD_PERFOMANCE_DATA
GROUP BY ad_placement;
SELECT COUNT(*) AS missing_count
FROM AD_PERFOMANCE_DATA
WHERE income IS NULL 
   OR TRIM(income)='';  
SELECT MAX(INCOME),MIN(INCOME)
FROM AD_PERFOMANCE_DATA;
SELECT COUNT(*) AS NI
FROM AD_PERFOMANCE_DATA
WHERE INCOME <0;
UPDATE AD_PERFOMANCE_DATA
SET INCOME=ABS(INCOME)
LIMIT 10000;
SELECT COUNT(*) AS NI
FROM AD_PERFOMANCE_DATA
WHERE INCOME <0;

SELECT COUNT(*) AS missing_count
FROM AD_PERFOMANCE_DATA
WHERE clicks IS NULL 
   OR TRIM(clicks)='';
SELECT COUNT(*) AS NegClick
FROM AD_PERFOMANCE_DATA
WHERE CLICKS <0;
update AD_PERFOMANCE_DATA
set clicks=abs(clicks)
where clicks<0;
SELECT COUNT(*) AS NegClick
FROM AD_PERFOMANCE_DATA
WHERE CLICKS <0;
alter table AD_PERFOMANCE_DATA
drop column click_time;
SELECT COUNT(*) AS missing_count
FROM AD_PERFOMANCE_DATA
WHERE conversion_rate IS NULL 
   OR TRIM(conversion_rate)='';
SELECT COUNT(*) AS unusual
FROM AD_PERFOMANCE_DATA
WHERE CONVERSION_RATE <0 or  CONVERSION_RATE > 1;
SELECT COUNT(*) AS missing_count
FROM AD_PERFOMANCE_DATA
WHERE CTR IS NULL 
   OR TRIM(CTR)='';
SELECT COUNT(*) AS unusual
FROM AD_PERFOMANCE_DATA
WHERE CTR <0 or  CTR > 1;
SELECT *,
      COUNT(*) AS DUPLICATE_COUNTS
FROM ad_perfomance_data
GROUP BY AGE,GENDER,INCOME,LOCATION,AD_TYPE,AD_TOPIC,AD_PLACEMENT,CLICKS,CONVERSION_RATE,CTR
HAVING COUNT(*)>1;
WITH person_groups AS (
  SELECT *,
         COUNT(*) OVER (PARTITION BY Age, Gender, Income, Location) AS duplicate_count,
         DENSE_RANK() OVER (ORDER BY Age, Gender, Income, Location) AS group_of_persons
  FROM ad_perfomance_data
)
SELECT *
FROM person_groups
ORDER BY group_of_persons;
SELECT COUNT(*) AS INCONSISTENT
FROM AD_PERFOMANCE_DATA
WHERE (Clicks = 0 AND CONVERSION_RATE >0);
SELECT COUNT(*) AS INCONSISTENT
FROM AD_PERFOMANCE_DATA
WHERE (Clicks = 0 AND CTR >0);
/*
  TODO: Handle inconsistent rows where:
  - QCC > 0
  - conversion_rate > 0
  - CTR > 0
  but clicks = 0
  This will be handled later in Python.
*/
SELECT * FROM AD_PERFOMANCE_DATA  

